name: CI/CD Pipeline

on:
  push:
    branches:
      - '16.0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        env:
          DOCKER_USERNAME: ${{ secrets.CI_REGISTRY_USER }}
          DOCKER_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login "${{ secrets.CI_REGISTRY }}" --username "${DOCKER_USERNAME}" --password-stdin

      - name: Build Docker Image
        run: |
          if [ "${{ github.ref }}" == "refs/heads/16.0" ]; then
            tag=""
            echo "Running on default branch '16.0': tag = 'latest'"
          else
            tag=":latest"
            echo "Running on branch '${{ github.ref }}': tag = $tag"
          fi
          docker build --pull -t "${{ secrets.CI_REGISTRY_IMAGE }}${tag}" -f build_tools/Dockerfile .

      - name: Push Docker Image
        run: docker push "${{ secrets.CI_REGISTRY_IMAGE }}${tag}"

  stage:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/16.0'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        env:
          DOCKER_USERNAME: ${{ secrets.CI_REGISTRY_USER }}
          DOCKER_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login "${{ secrets.CI_REGISTRY }}" --username "${DOCKER_USERNAME}" --password-stdin

      - name: Pull Docker Image
        run: |
          if [ "${{ github.ref }}" == "refs/heads/16.0" ]; then
            tag=""
            echo "Running on default branch '16.0': tag = 'latest'"
          else
            tag=":latest"
            echo "Running on branch '${{ github.ref }}': tag = $tag"
          fi
          docker pull "${{ secrets.CI_REGISTRY_IMAGE }}${tag}"

      - name: Deploy with Docker Compose
        run: |
          cd /opt/deployments/erp-stage
          COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d --scale stage_web="${{ secrets.SCALE_NUMBER_STAGE }}"
          docker image prune -f --filter label=system
          docker volume prune -f 

  production:
    runs-on: ubuntu-latest
    needs: stage
    if: github.ref == 'refs/heads/16.0'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        env:
          DOCKER_USERNAME: ${{ secrets.CI_REGISTRY_USER }}
          DOCKER_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login "${{ secrets.CI_REGISTRY }}" --username "${DOCKER_USERNAME}" --password-stdin

      - name: Pull Docker Image
        run: |
          if [ "${{ github.ref }}" == "refs/heads/16.0" ]; then
            tag=""
            echo "Running on default branch '16.0': tag = 'latest'"
          else
            tag=":latest"
            echo "Running on branch '${{ github.ref }}': tag = $tag"
          fi
          docker pull "${{ secrets.CI_REGISTRY_IMAGE }}${tag}"

      - name: Deploy with Docker Compose
        run: |
          cd /opt/deployments/erp
          COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d --scale web="${{ secrets.SCALE_NUMBER }}"
          docker image prune -f --filter label=system
          docker volume prune -f 

          ####
